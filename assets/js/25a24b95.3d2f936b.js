"use strict";(self.webpackChunkauxilor_docs=self.webpackChunkauxilor_docs||[]).push([[13039],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return g}});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=a.createContext({}),u=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=u(e.components);return a.createElement(i.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=u(n),g=o,d=m["".concat(i,".").concat(g)]||m[g]||c[g]||r;return n?a.createElement(d,l(l({ref:t},p),{},{components:n})):a.createElement(d,l({ref:t},p))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,l=new Array(r);l[0]=m;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:o,l[1]=s;for(var u=2;u<r;u++)l[u]=n[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},37419:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return i},default:function(){return g},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return c}});var a=n(87462),o=n(63366),r=(n(67294),n(3905)),l=["components"],s={title:"GUI Pages",sidebar_position:8},i=void 0,u={unversionedId:"all-plugins/pages",id:"all-plugins/pages",title:"GUI Pages",description:"Custom Pages",source:"@site/docs/all-plugins/pages.md",sourceDirName:"all-plugins",slug:"/all-plugins/pages",permalink:"/all-plugins/pages",editUrl:"https://github.com/Auxilor/auxilor.github.io/tree/master/docs/all-plugins/pages.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{title:"GUI Pages",sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"The Price System",permalink:"/all-plugins/prices"},next:{title:"Data Migration Guide",permalink:"/all-plugins/data-migration-guide"}},p={},c=[{value:"Custom Pages",id:"custom-pages",level:2},{value:"How to make a page",id:"how-to-make-a-page",level:3},{value:"Example Page Config",id:"example-page-config",level:3},{value:"Custom GUI Slots",id:"custom-gui-slots",level:2},{value:"What are custom GUI slots?",id:"what-are-custom-gui-slots",level:3},{value:"How to make a custom GUI slot",id:"how-to-make-a-custom-gui-slot",level:3}],m={toc:c};function g(e){var t=e.components,n=(0,o.Z)(e,l);return(0,r.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"custom-pages"},"Custom Pages"),(0,r.kt)("p",null,"Custom pages are used in most of the plugins, and understanding how to correctly configure a GUI page is important to creating your menus."),(0,r.kt)("h3",{id:"how-to-make-a-page"},"How to make a page"),(0,r.kt)("p",null,"Pages consist of three key components, a mask, a pattern, and sometimes a page number. A pattern is the layout of the background or filler items. Think of the pattern section as the GUI, with 9 columns and up to 6 rows. "),(0,r.kt)("p",null,"Patterns use a simple format:\n",(0,r.kt)("inlineCode",{parentName:"p"},"0")," is an empty slot.\n",(0,r.kt)("inlineCode",{parentName:"p"},"1-9")," are the first nine different filler items\n",(0,r.kt)("inlineCode",{parentName:"p"},"a-z"),' is the remaining 26 items.\nIn total you could display 35 different items as "filler" items in your GUI.'),(0,r.kt)("p",null,"A mask is the items to be shown in the pattern layout, these work from the top down. You can use the ",(0,r.kt)("a",{parentName:"p",href:"https://plugins.auxilor.io/all-plugins/the-item-lookup-system"},"Item Lookup System")," here to add custom items, apply names or any other of the options.\nThe first item in the list will represent ",(0,r.kt)("inlineCode",{parentName:"p"},"1")," in the pattern, the second item in the list is ",(0,r.kt)("inlineCode",{parentName:"p"},"2"),", etc.."),(0,r.kt)("h3",{id:"example-page-config"},"Example Page Config"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'    - page: 1\n      mask:\n        items: # The order of items to display\n          - gray_stained_glass_pane # The 1st Item\n          - black_stained_glass_pane # The 2nd Item\n        pattern: \n          - "222222222"\n          - "211111112"\n          - "222222222"\n')),(0,r.kt)("p",null,"This example has a surrounding layer of ",(0,r.kt)("inlineCode",{parentName:"p"},"gray_stained_glass_pane")," and a center strip of ",(0,r.kt)("inlineCode",{parentName:"p"},"black_stained_glass_pane"),"."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://imgur.com/lyLo6pD",alt:"Page"})),(0,r.kt)("h2",{id:"custom-gui-slots"},"Custom GUI Slots"),(0,r.kt)("h3",{id:"what-are-custom-gui-slots"},"What are custom GUI slots?"),(0,r.kt)("p",null,"When configuring a GUI in a plugin, you might stumble across this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"# Custom GUI slots; see here for a how-to: https://plugins.auxilor.io/all-plugins/pages#custom-gui-slots\ncustom-slots: []\n")),(0,r.kt)("p",null,"This means you can add custom items (with commands) to your GUIs for that extra layer of customizability."),(0,r.kt)("h3",{id:"how-to-make-a-custom-gui-slot"},"How to make a custom GUI slot"),(0,r.kt)("p",null,"Quite simply, a GUI slot looks like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"custom-slots:\n  - row: 6 \n    column: 9\n    item: ecoitems:skill_gui_item \n    lore: []\n    left-click:\n      - console:op %player% # Commands can start with console: to be ran by console, and use %player% as a placeholder.\n      - spawn # If you don't specify, then the command will be ran by the player.\n    right-click: []\n    shift-left-click: []\n    shift-right-click: []\n")),(0,r.kt)("p",null,"If you have no right click / shift left click / etc.. commands to add, you can omit the sections, like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"custom-slots:\n  - row: 1\n    column: 5\n    item: player_head texture:eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvODU3MDVjZjg2NGRmMmMxODJlMzJjNDg2YjcxNDdjYmY3ODJhMGFhM2RmOGE2ZDYxNDUzOTM5MGJmODRmYjE1ZCJ9fX0=\n    right-click:\n      - console:eco give %player% 1000\n")),(0,r.kt)("p",null,"And you can add as many custom slots as you want, like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"custom-slots:\n  - <slot 1>\n  - <slot 2>\n  - <slot 3>\n  - ...etc\n")))}g.isMDXComponent=!0}}]);