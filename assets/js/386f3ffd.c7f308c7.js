"use strict";(self.webpackChunkauxilor_docs=self.webpackChunkauxilor_docs||[]).push([[1539],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return d}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=c(r),d=a,h=m["".concat(l,".").concat(d)]||m[d]||u[d]||o;return r?n.createElement(h,i(i({ref:t},p),{},{components:r})):n.createElement(h,i({ref:t},p))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},1079:function(e,t,r){r.r(t),r.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return u}});var n=r(7462),a=r(3366),o=(r(7294),r(3905)),i=["components"],s={title:"Rewards",sidebar_position:3},l=void 0,c={unversionedId:"ecocrates/rewards",id:"ecocrates/rewards",title:"Rewards",description:"How to configure a reward",source:"@site/docs/ecocrates/rewards.md",sourceDirName:"ecocrates",slug:"/ecocrates/rewards",permalink:"/ecocrates/rewards",editUrl:"https://github.com/Auxilor/docs/tree/main/packages/create-docusaurus/templates/shared/docs/ecocrates/rewards.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Rewards",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"How to make a custom crate",permalink:"/ecocrates/how-to-make-a-custom-crate"},next:{title:"Animations / Rolls",permalink:"/ecocrates/animationsandrolls"}},p={},u=[{value:"How to configure a reward",id:"how-to-configure-a-reward",level:2},{value:"Showing a reward in the preview GUI",id:"showing-a-reward-in-the-preview-gui",level:2}],m={toc:u};function d(e){var t=e.components,r=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"how-to-configure-a-reward"},"How to configure a reward"),(0,o.kt)("p",null,"Example reward config:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'  - id: 1000_coins\n    commands:\n      - "eco give %player% 1000"\n    items: [ ]\n    messages: [ ]\n    weight:\n      permission-multipliers: false\n      actual: 10\n      display: 25\n    max-wins: -1\n    display:\n      name: "&a$1000"\n      item: paper 1 unbreaking:1 hide_enchants\n      lore:\n        - "&fDisplay Chance: &a%chance%%"\n        - "&fActual Chance: &a%actual_chance%%"\n')),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"id:")," The ID of the reward, used to add the reward to a crate"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"commands:")," Commands to be ran when the reward is won - use %player% for the player-name"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"items:")," A list of items to be given to the player when the reward is won, supports custom items, enchants, and more - read about the syntax here:"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://plugins.auxilor.io/all-plugins/the-item-lookup-system"},"The Item Lookup System")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"messages:")," The messages to be sent to the player when they win"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"weight:")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"permission-multipliers:")," If permission chance multipliers should apply to this reward"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"actual:")," The actual chance of winning the reward"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"display:")," The chance of the reward showing up in crate animations - this allows you to rig crates however you want, for example making a rare (or even unwinnable) item appear common, or vice versa. Both actual and display weight let you use PAPI placeholders to calculate them, for example %player_y%, if you want the chance to depend on a placeholder - very useful if you're basing it off of wins, ranks, or whatever - this supports mathematical expressions too, like when configuring an effect in my other plugins")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"max-wins:")," The max amount of times a given player can win the reward, perfect for single-use rewards like giving particle effects. Set to -1 to disable"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"display:")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"name:")," The name of the reward"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"item:")," The item to be shown in animations and previews"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"lore:")," The lore of the item")),(0,o.kt)("h2",{id:"showing-a-reward-in-the-preview-gui"},"Showing a reward in the preview GUI"),(0,o.kt)("p",null,"In order to have the reward be shown in the preview GUI, you need to specify it like this in your crate config:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'preview: # The preview GUI, when left-clicking a crate or using /crates preview\n  title: Demo Crate # The GUI title\n  rows: 6 # The amount of rows for the gui, between 1 and 6\n  mask: # Filler items for decoration\n    items: # Add as many items as you want\n      - gray_stained_glass_pane # Item 1\n      - black_stained_glass_pane # Item 2\n    pattern:\n      - "222222222"\n      - "211010112"\n      - "201010102"\n      - "201010102"\n      - "201111102"\n      - "222222222"\n  rewards: # Where to put rewards in the GUI\n    - id: diamond_sword # The reward ID\n      row: 3 # The row\n      column: 2 # The column\n    - id: stack_of_emeralds\n      row: 4\n      column: 2\n    - id: bedrock\n      row: 3\n      column: 2\n    - id: 1000_coins\n      row: 5\n      column: 2\n')))}d.isMDXComponent=!0}}]);