"use strict";(self.webpackChunkauxilor_docs=self.webpackChunkauxilor_docs||[]).push([[5357],{3905:function(e,n,t){t.d(n,{Zo:function(){return m},kt:function(){return h}});var o=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=o.createContext({}),c=function(e){var n=o.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},m=function(e){var n=c(e.components);return o.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},u=o.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),u=c(t),h=a,d=u["".concat(l,".").concat(h)]||u[h]||p[h]||r;return t?o.createElement(d,s(s({ref:n},m),{},{components:t})):o.createElement(d,s({ref:n},m))}));function h(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,s=new Array(r);s[0]=u;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var c=2;c<r;c++)s[c]=t[c];return o.createElement.apply(null,s)}return o.createElement.apply(null,t)}u.displayName="MDXCreateElement"},65428:function(e,n,t){t.r(n),t.d(n,{assets:function(){return m},contentTitle:function(){return l},default:function(){return h},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return p}});var o=t(87462),a=t(63366),r=(t(67294),t(3905)),s=["components"],i={title:"How to make a custom mob",sidebar_position:2},l=void 0,c={unversionedId:"ecomobs/how-to-make-a-custom-mob",id:"ecomobs/how-to-make-a-custom-mob",title:"How to make a custom mob",description:"Default configs",source:"@site/docs/ecomobs/how-to-make-a-custom-mob.md",sourceDirName:"ecomobs",slug:"/ecomobs/how-to-make-a-custom-mob",permalink:"/ecomobs/how-to-make-a-custom-mob",editUrl:"https://github.com/Auxilor/auxilor.github.io/tree/master/docs/ecomobs/how-to-make-a-custom-mob.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"How to make a custom mob",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Commands and Permissions",permalink:"/ecomobs/commands-and-permissions"},next:{title:"Mob Categories",permalink:"/ecomobs/mob-categories"}},m={},p=[{value:"Default configs",id:"default-configs",level:2},{value:"How to add mobs",id:"how-to-add-mobs",level:2},{value:"Example Mob Config",id:"example-mob-config",level:2},{value:"Custom AI goals",id:"custom-ai-goals",level:3}],u={toc:p};function h(e){var n=e.components,t=(0,a.Z)(e,s);return(0,r.kt)("wrapper",(0,o.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"default-configs"},"Default configs"),(0,r.kt)("p",null,"The default configs can be found here:"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/Auxilor/EcoMobs/blob/master/eco-core/core-plugin/src/main/resources/mobs/"},"GitHub")),(0,r.kt)("h2",{id:"how-to-add-mobs"},"How to add mobs"),(0,r.kt)("p",null,"Mobs are each config files placed in the ",(0,r.kt)("inlineCode",{parentName:"p"},"/mobs/")," folder, and you can add or remove them as you please. There's an example config called ",(0,r.kt)("inlineCode",{parentName:"p"},"_example.yml")," to help you out!"),(0,r.kt)("h2",{id:"example-mob-config"},"Example Mob Config"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'# The ID of the mob is the name of the .yml file,\n# for example steel_golem.yml has the ID of steel_golem\n# You can place mobs anywhere in this folder,\n# including in subfolders if you want to organize your mob configs\n# _example.yml is not loaded.\n\n# A base mob and modifiers\n# View an explanation for this system here: https://plugins.auxilor.io/all-plugins/the-entity-lookup-system\nmob: zombie attack-damage:90 movement-speed:1.5 follow-range:16 health:1200\n\n# The ID of the mob category, handles spawning.\ncategory: common\n\n# Supported placeholders:\n# %health%, %max_health%, %health_percent%, %time% (formats as minutes:seconds, eg 1:56)\ndisplay-name: "&cNecrotic Soldier &7| &c%health%\u2665 &7| &e%time%"\n\n# If the mob you\'re using supports equipment, you can specify the items in each slot.\n# Remove any slots that you don\'t want to put equipment in.\nequipment:\n  hand: diamond_sword sharpness:2\n  off-hand: shield\n  head: ""\n  chest: ""\n  legs: ""\n  feet: ""\n\n# Options for plugin integrations\n# Remove sections for plugins you\'re not using\nintegrations:\n  # Options for LevelledMobs\n  levelled-mobs:\n    can-level: true\n\n  # Options for ModelEngine\n  model-engine:\n    id: ""\n\n  # Options for LibsDisguises\n  libs-disguises:\n    id: ""\n\n# Custom Mob AI\n# Read here: https://plugins.auxilor.io/all-plugins/custom-entity-ai\ncustom-ai:\n  # If custom AI should override the vanilla entity AI.\n  clear: false\n\n  # How the mob decides who to attack.\n  target-goals: [ ]\n\n  # How the mob should behave.\n  entity-goals: [ ]\n\n# Effects are done from the player\'s perspective: to treat the player as the victim,\n# either use self_as_victim in args, or use player_as_victim in mutators.\n# You can use display name placeholders in effects\n# You can also use top damager placeholders:\n# %top_damager_<place>_name%, %top_damager_<place>_damage%, %top_damager_<place>_display%\neffects:\n  # Effects ran when the mob spawns\n  spawn: [ ]\n\n  # Effects ran when the mob despawns\n  despawn: [ ]\n\n  # Effects ran when the player interacts with the mob\n  interact: [ ]\n\n  # Effects ran when the player melee attacks the mob\n  melee-attack: [ ]\n\n  # Effects ran when the player does a ranged attack on the mob\n  ranged-attack: [ ]\n\n  # Effects ran when the player attacks the mob\n  any-attack: [ ]\n\n  # Effects ran when the mob takes damage\n  take-damage: [ ]\n\n  # Effects ran when the player is damaged by the mob\n  damage-player: [ ]\n\n  # Effects ran when the player is killed by the mob\n  kill-player: [ ]\n\n  # Effects ran when the mob dies\n  death: [ ]\n\n  # Effects ran when the mob is killed by the player\n  kill: [ ]\n\n# The lifespan of the mob, in seconds. Set to -1 to disable.\nlifespan: 120\n\ndefence:\n  # If the mob can get into boats, minecarts, etc.\n  can-mount: true\n\n  # A list of damage causes that the mob should multiply incoming damage by.\n  # The list of damage causes can be found here:\n  # https://hub.spigotmc.org/javadocs/spigot/org/bukkit/event/entity/EntityDamageEvent.DamageCause.html\n  damage-modifiers:\n    hot_floor: 1\n    fire_tick: 1\n    lava: 1\n    suffocation: 1\n    drowning: 1\n    entity_explosion: 1\n    block_explosion: 1\n\n# Options for what the mob drops\ndrops:\n  # The amount of experience to drop\n  experience: 30\n\n  # You can specify as many drops as you want, and group several drops together under one chance\n  items:\n    - chance: 100\n      items:\n        - diamond_sword unbreaking:1 name:"Example Sword"\n\n# Options for the boss bar\nboss-bar:\n  # If the mob should have a boss bar\n  enabled: true\n\n  # Options: blue, green, pink, purple, red, white, yellow\n  color: white\n\n  # Options: progress, notched_20, notched_12, notched_10, notched_6\n  style: progress\n\n  # The distance from the mob where the boss bar is visible\n  radius: 120\n\n# Options for spawning the mob\nspawn:\n  # A spawn totem is a set of 3 blocks on top of each other to spawn a mob (like a snow golem)\n  totem:\n    # If spawn totems should be enabled\n    enabled: false\n\n    # The top block\n    top: netherite_block\n\n    # The middle block\n    middle: iron_block\n\n    # The bottom block\n    bottom: magma_block\n\n    # The conditions for the totem to work\n    conditions: [ ]\n\n  # Options for a spawn egg\n  egg:\n    # If the mob should have a spawn egg\n    enabled: true\n\n    # The conditions for the spawn egg to work\n    # not-met-lines will show up on the spawn egg\n    conditions: [ ]\n\n    # The spawn egg item\n    item: evoker_spawn_egg unbreaking:1 hide_enchants\n    name: "&cNecrotic Soldier&f Spawn Egg"\n    lore:\n      - ""\n      - "&8&oPlace on the ground to"\n      - "&8&osummon a &cNecrotic Soldier"\n\n    craftable: true\n\n    recipe:\n      - iron_block\n      - netherite_block\n      - iron_block\n      - air\n      - ecoitems:boss_core ? nether_star\n      - air\n      - iron_block\n      - netherite_block\n      - iron_block\n')),(0,r.kt)("h3",{id:"custom-ai-goals"},"Custom AI goals"),(0,r.kt)("p",null,"Check how to configure custom entity AI here:"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://plugins.auxilor.io/all-plugins/custom-entity-ai"},"Custom Entity AI")))}h.isMDXComponent=!0}}]);