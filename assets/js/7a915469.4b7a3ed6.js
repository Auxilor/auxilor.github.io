"use strict";(self.webpackChunkauxilor_docs=self.webpackChunkauxilor_docs||[]).push([[6222],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=p(n),d=o,f=m["".concat(s,".").concat(d)]||m[d]||c[d]||a;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1934:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return c}});var r=n(87462),o=n(63366),a=(n(67294),n(3905)),i=["components"],l={title:"The Points System",sidebar_position:8},s=void 0,p={unversionedId:"effects/points",id:"effects/points",title:"The Points System",description:"Points are similar to currencies, however they exist purely as a way to keep track of something in a player. For example, lets say you want the player to have to used an item a certain amount of times in order to use another one - you would be able to keep track of this with a point.",source:"@site/docs/effects/points.md",sourceDirName:"effects",slug:"/effects/points",permalink:"/effects/points",editUrl:"https://github.com/Auxilor/auxilor.github.io/tree/master/docs/effects/points.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{title:"The Points System",sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"All Triggers",permalink:"/effects/all-triggers"},next:{title:"Item Levels",permalink:"/effects/item-levels"}},u={},c=[{value:"Point Types",id:"point-types",level:2},{value:"Commands",id:"commands",level:2},{value:"<code>/libreforge points set/give/get/take</code>",id:"libreforge-points-setgivegettake",level:2}],m={toc:c};function d(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Points are similar to currencies, however they exist purely as a way to keep track of something in a player. For example, lets say you want the player to have to used an item a certain amount of times in order to use another one - you would be able to keep track of this with a point."),(0,a.kt)("p",null,"You can have as many different points as you want, the plugins will keep track of them automatically. Points are shared between plugins, too - so if you make a point in EcoItems, then you can use it in EcoPets, EcoJobs, etc."),(0,a.kt)("p",null,"A point can hold any numeric value, including negatives and decimals, but of course how you decide to use them is completely up to you."),(0,a.kt)("h2",{id:"point-types"},"Point Types"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Point Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Placeholder"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Points"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"%libreforge_points_<point>%")),(0,a.kt)("td",{parentName:"tr",align:null},"A general point that can be used to keep track of something per-player. (e.g. times jumped, zombies killed, etc.)")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Global Points"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"%libreforge_global_points_<point>%")),(0,a.kt)("td",{parentName:"tr",align:null},"A general point that keeps track of something globally/server-wide for all players. (e.g. zombies killed by all players.)")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Item Points"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"%libreforge_item_points_<point>%")),(0,a.kt)("td",{parentName:"tr",align:null},"A point that is tied to a specific item and tracks data on the item. Useful for making tools with custom durability's or per-item stats (e.g zombies killed using this sword.)")))),(0,a.kt)("h2",{id:"commands"},"Commands"),(0,a.kt)("h2",{id:"libreforge-points-setgivegettake"},(0,a.kt)("inlineCode",{parentName:"h2"},"/libreforge points set/give/get/take")),(0,a.kt)("p",null,"Usage: ",(0,a.kt)("inlineCode",{parentName:"p"},"/libreforge points give <player> <point> <value>")),(0,a.kt)("p",null,"To change global points, pass ",(0,a.kt)("inlineCode",{parentName:"p"},"global")," as the player name."))}d.isMDXComponent=!0}}]);