"use strict";(self.webpackChunkauxilor_docs=self.webpackChunkauxilor_docs||[]).push([[6222],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),c=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=c(e.components);return o.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},f=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),f=c(n),m=r,h=f["".concat(s,".").concat(m)]||f[m]||p[m]||i;return n?o.createElement(h,a(a({ref:t},u),{},{components:n})):o.createElement(h,a({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=f;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,a[1]=l;for(var c=2;c<i;c++)a[c]=n[c];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}f.displayName="MDXCreateElement"},1934:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return p}});var o=n(87462),r=n(63366),i=(n(67294),n(3905)),a=["components"],l={title:"The Points System",sidebar_position:7},s=void 0,c={unversionedId:"effects/points",id:"effects/points",title:"The Points System",description:"Points are similar to currencies, however they exist purely as a way to keep track of something in a player. For",source:"@site/docs/effects/points.md",sourceDirName:"effects",slug:"/effects/points",permalink:"/effects/points",editUrl:"https://github.com/Auxilor/auxilor.github.io/tree/master/docs/effects/points.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{title:"The Points System",sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"All Triggers",permalink:"/effects/all-triggers"},next:{title:"Item Levels",permalink:"/effects/item-levels"}},u={},p=[{value:"Placeholders",id:"placeholders",level:2},{value:"Global Points",id:"global-points",level:2},{value:"Item Points",id:"item-points",level:2}],f={toc:p};function m(e){var t=e.components,n=(0,r.Z)(e,a);return(0,i.kt)("wrapper",(0,o.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Points are similar to currencies, however they exist purely as a way to keep track of something in a player. For\nexample, lets say you want the player to have to used an item a certain amount of times in order to use another one -\nyou would be able to keep track of this with a point."),(0,i.kt)("p",null,"You can have as many different points as you want, the plugins will keep track of them automatically. Points are shared\nbetween plugins, too - so if you make a point in EcoItems, then you can use it in EcoPets, EcoJobs, etc."),(0,i.kt)("p",null,"A point can hold any numeric value, including negatives and decimals, but of course how you decide to use them is\ncompletely up to you."),(0,i.kt)("h2",{id:"placeholders"},"Placeholders"),(0,i.kt)("p",null,"You can get the value of a point with the following placeholder:"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"%libreforge_points_<point>%")),(0,i.kt)("h2",{id:"global-points"},"Global Points"),(0,i.kt)("p",null,"There are also global points, which belong to the server rather than to the player."),(0,i.kt)("p",null,"You can get the value of these with ",(0,i.kt)("inlineCode",{parentName:"p"},"%libreforge_global_points_<point>%")),(0,i.kt)("h2",{id:"item-points"},"Item Points"),(0,i.kt)("p",null,"Item Points exist too - instead of belonging to the player or the server, they belong to items."),(0,i.kt)("p",null,"You can get the value of these with ",(0,i.kt)("inlineCode",{parentName:"p"},"%libreforge_item_points_<point>%")))}m.isMDXComponent=!0}}]);