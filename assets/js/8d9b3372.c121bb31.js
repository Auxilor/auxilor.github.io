"use strict";(self.webpackChunkauxilor_docs=self.webpackChunkauxilor_docs||[]).push([[77913],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return f}});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=a.createContext({}),c=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=c(e.components);return a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=c(n),f=o,d=m["".concat(p,".").concat(f)]||m[f]||u[f]||r;return n?a.createElement(d,i(i({ref:t},s),{},{components:n})):a.createElement(d,i({ref:t},s))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<r;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},46050:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return p},default:function(){return f},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return u}});var a=n(87462),o=n(63366),r=(n(67294),n(3905)),i=["components"],l={title:"Configuring an Effect",sidebar_position:1},p=void 0,c={unversionedId:"effects/configuring-an-effect",id:"effects/configuring-an-effect",title:"Configuring an Effect",description:"Configuring an Effect",source:"@site/docs/effects/configuring-an-effect.md",sourceDirName:"effects",slug:"/effects/configuring-an-effect",permalink:"/effects/configuring-an-effect",editUrl:"https://github.com/Auxilor/auxilor.github.io/tree/master/docs/effects/configuring-an-effect.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Configuring an Effect",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"minecraft:reset_universal_anger",permalink:"/all-plugins/custom-entity-ai/all-target-goals/reset_universal_anger"},next:{title:"Configuring an Effect Chain",permalink:"/effects/configuring-a-chain"}},s={},u=[{value:"Configuring an Effect",id:"configuring-an-effect",level:2},{value:"Optional Arguments",id:"optional-arguments",level:2},{value:"Placeholders",id:"placeholders",level:2},{value:"Load Weight",id:"load-weight",level:2}],m={toc:u};function f(e){var t=e.components,n=(0,o.Z)(e,i);return(0,r.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"configuring-an-effect"},"Configuring an Effect"),(0,r.kt)("p",null,"First, you need to know of the different types of Effects: Triggered and Permanent. These are configured similarly but there are a few differences.\nThe main difference is that all Triggered effects require a ",(0,r.kt)("a",{parentName:"p",href:"https://plugins.auxilor.io/effects/all-triggers"},"trigger")," to activate, Permanent effects are always active if all conditions (optional) are met."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"[!example]"),(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"effects:\n  - id: spawn_particle\n    args:\n      amount: 10\n      particle: soul\n      chance: 25\n    triggers:\n      - mine_block\n    filters:\n      blocks:\n        - diamond_ore\n        - deepslate_diamond_ore\n    mutators:\n      - id: translate_location\n        args:\n          add_x: 0.5\n          add_y: 0.5\n          add_z: 0.5\n    conditions:\n      - id: below_y\n        args:\n          y: 10\n"))),(0,r.kt)("p",null,"The example effect: 25% chance to spawn 10 soul particles in the centre of a diamond ore when its mined and the player is below Y level 10."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"id"),': The ID of the effect. You can find all the effects under "All Effects" on the sidebar.'),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"args"),": The args for the effect (from the effect page). There are additional optional args that you can put here (see below)."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"triggers"),": The list of ",(0,r.kt)("a",{parentName:"p",href:"https://plugins.auxilor.io/effects/all-triggers"},"triggers")," that activate this effect. (This does not apply on permanent effects)."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"filters"),": The list of filters to be applied on the trigger. (e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"blocks")," filter on ",(0,r.kt)("inlineCode",{parentName:"p"},"mine_block")," trigger, or ",(0,r.kt)("inlineCode",{parentName:"p"},"entities")," filter on ",(0,r.kt)("inlineCode",{parentName:"p"},"melee_attack")," trigger.)"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"conditions"),": As well as each effect holder (e.g. Talisman, Reforge, Enchant) having its own conditions, you can specify\na list of effect-specific conditions that work in exactly the same way"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"mutators"),": Mutate the data sent to the effect: you can change parameters such as the victim, the location, etc.\nA mutator, like an effect or condition, consists of an ID and arguments."),(0,r.kt)("h2",{id:"optional-arguments"},"Optional Arguments"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"[!info]"," ",(0,r.kt)("inlineCode",{parentName:"p"},"chance"),"\nThe chance of this effect activating, as a percentage. (Defaults to 100)"),(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"args:\n  chance: 50\n"))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"[!info]"," ",(0,r.kt)("inlineCode",{parentName:"p"},"cooldown"),"\nThe cooldown between effect activations, in seconds. (Defaults to 0)"),(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'args:\n  cooldown: 10\n  cooldown_group: magic_abilities # (Optional) The cooldown group, if not specified the cooldown will be for this effect only\n  send_cooldown_message: true # (Optional) If the cooldown message should be sent\n  cooldown_message: "Custom cooldown message with %seconds% left" # (Optional) a custom cooldown message\n  cooldown_effects: # (Optional) Effects to run if on cooldown\n    - id: send_message\n      args:\n        message: "You are on cooldown! Try again in &a%seconds%&r seconds."\n'))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"[!info]"," ",(0,r.kt)("inlineCode",{parentName:"p"},"cost"),"\nThe cost required to use or activate this effect. ",(0,r.kt)("strong",{parentName:"p"},"Requires Vault.")," (defaults to 0)"),(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"args:\n  cost: 200\n"))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"[!info]"," ",(0,r.kt)("inlineCode",{parentName:"p"},"every"),"\nSpecify the effect to activate every x times. (defaults to always)"),(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"args:\n  every: 3\n"))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"[!info]"," ",(0,r.kt)("inlineCode",{parentName:"p"},"require"),"\nRequire an expression to be true for the effect to run."),(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"args:\n  require: '%ecobits_crystals% > 4'\n"))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"[!info]"," ",(0,r.kt)("inlineCode",{parentName:"p"},"mana_cost"),"\nmana_cost\nThe mana cost required to use or activate this effect. ",(0,r.kt)("strong",{parentName:"p"},"Requires AuraSkills.")," (defaults to 0)"),(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"args:\n  mana_cost: 10\n"))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"[!info]"," ",(0,r.kt)("inlineCode",{parentName:"p"},"<magic>_cost"),"\nThe magic cost (e.g. mana) required to use or activate this effect. ",(0,r.kt)("strong",{parentName:"p"},"Requires EcoSkills.")," (defaults to 0)"),(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"args:\n  mana_cost: 10\n"))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"[!info]"," ",(0,r.kt)("inlineCode",{parentName:"p"},"delay"),"\nThe amount of ticks to wait before executing the effect. (defaults to 0)"),(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"args:\n  delay: 20\n"))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"[!info]"," ",(0,r.kt)("inlineCode",{parentName:"p"},"repeat"),"\nSpecify the effect to activate repeatedly. If the effect has a delay, it will delay between each repeat.\nIf the effect has any mutators, they will run again for each repeat."),(0,r.kt)("p",{parentName:"blockquote"},"This provides new placeholders: ",(0,r.kt)("inlineCode",{parentName:"p"},"%repeat_times%"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"%repeat_start%"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"%repeat_increment%"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"%repeat_count%"),"."),(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"  args:\n    repeat:\n      times: 5 # How many times the effect should be repeated\n      start: -10 # The initial value of the %repeat_count% placeholder\n      increment: 10 # How much the count should be increased (or decreased) by on each repeat\n"))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"[!info]"," ",(0,r.kt)("inlineCode",{parentName:"p"},"filters_before_mutation"),"\nBy default, filters are ran after mutation - set this to true if filters should be ran on the un-mutated data. (defaults to false)"),(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"args:\n  filters_before_mutation: true\n"))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"[!info]"," ",(0,r.kt)("inlineCode",{parentName:"p"},"disable_antigrief_check"),"\nBy default, the antigrief plugins on your server are checked. Set this to true to disable that. (defaults to false)"),(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"args:\n  disable_antigrief_check: true\n"))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"[!info]"," ",(0,r.kt)("inlineCode",{parentName:"p"},"price"),"\nThe price required to use or activate this effect."),(0,r.kt)("p",{parentName:"blockquote"},"This supports all known prices: supports money, items, points, second currencies, etc.\nRead more about the system here: ",(0,r.kt)("a",{parentName:"p",href:"https://plugins.auxilor.io/all-plugins/prices"},"Prices")),(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'args:\n  price:\n    value: 100 * %player_y%\n    type: crystals\n    display: "&b%value% Crystals \u2756"\n'))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"[!info]"," ",(0,r.kt)("inlineCode",{parentName:"p"},"run_order"),"\nThe order the effect should run in. This can be ",(0,r.kt)("inlineCode",{parentName:"p"},"start"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"early"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"normal"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"late"),", or ",(0,r.kt)("inlineCode",{parentName:"p"},"end"),"."),(0,r.kt)("p",{parentName:"blockquote"},"Effects have default run orders (used to make effects work together properly), but this option allows for overriding them,\nfor example to make ",(0,r.kt)("inlineCode",{parentName:"p"},"add_damage")," (defaults to ",(0,r.kt)("inlineCode",{parentName:"p"},"late"),") run before ",(0,r.kt)("inlineCode",{parentName:"p"},"damage_multiplier")," (defaults to ",(0,r.kt)("inlineCode",{parentName:"p"},"normal"),")."),(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"args:\n  run-order: early\n"))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"[!info]"," ",(0,r.kt)("inlineCode",{parentName:"p"},"custom_<id>"),"\nUse a ",(0,r.kt)("a",{parentName:"p",href:"https://plugins.auxilor.io/effects/custom-arguments"},"custom effect argument"),"."),(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"args:\n  custom_<id>:\n    <arg 1>: <value>\n    <arg 2>: <value>\n    ... etc\n"))),(0,r.kt)("h2",{id:"placeholders"},"Placeholders"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Any numeric value (integer, decimal) can be a mathematical expression involving placeholders!")),(0,r.kt)("p",null,"For example, you can specify the chance to be dependent on your y level: as in ",(0,r.kt)("inlineCode",{parentName:"p"},"chance: 100 - %player_y%")," - permanent effects will evaluate the expression on activation, and triggered effects will evaluate it on each trigger.\nMake sure you only use placeholders with numeric values, as you will get weird behaviour otherwise."),(0,r.kt)("p",null,"If the victim is a player, you can supply any placeholder prefixed with\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"victim_"),"\xa0(e.g.\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"%victim_player_y%"),") as well."),(0,r.kt)("p",null,"There are also extra placeholders passed in that you can use:"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"[!faq]"," List of Placeholders\n| Placeholder           | Value                                                                                                                           | Aliases                                                        |\n| --------------------- | ------------------------------------------------------------------------------------------------------------------------------- | -------------------------------------------------------------- |\n| ",(0,r.kt)("inlineCode",{parentName:"p"},"%trigger_value%"),"     | The value passed by the trigger (e.g. the amount of damage dealt; see ",(0,r.kt)("a",{parentName:"p",href:"https://plugins.auxilor.io/effects/all-triggers"},"here"),"). | ",(0,r.kt)("inlineCode",{parentName:"p"},"%triggervalue%"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"%trigger%"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"%value%"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"%tv%"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"%v%"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"%t%")," |\n| ",(0,r.kt)("inlineCode",{parentName:"p"},"%player%"),"            | The player's name                                                                                                               |                                                                |\n| ",(0,r.kt)("inlineCode",{parentName:"p"},"%player_uuid%"),"       | The player's UUID                                                                                                               |                                                                |\n| ",(0,r.kt)("inlineCode",{parentName:"p"},"%victim_health%"),"     | The victim's health                                                                                                             |                                                                |\n| ",(0,r.kt)("inlineCode",{parentName:"p"},"%victim_max_health%")," | The victim's max health                                                                                                         |                                                                |\n| ",(0,r.kt)("inlineCode",{parentName:"p"},"%distance%"),"          | The distance between the player and the victim                                                                                  |                                                                |\n| ",(0,r.kt)("inlineCode",{parentName:"p"},"%victim_level%"),"      | The victim's level (",(0,r.kt)("strong",{parentName:"p"},"Requires LevelledMobs"),")                                                                                  |                                                                |\n| ",(0,r.kt)("inlineCode",{parentName:"p"},"%hits%"),"              | The amount of times the player has hit the victim                                                                               |                                                                |\n| ",(0,r.kt)("inlineCode",{parentName:"p"},"%text%"),"              | The message text from the trigger, for example a chat message                                                                   | ",(0,r.kt)("inlineCode",{parentName:"p"},"%string%"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"%message%"),"                                        |\n| ",(0,r.kt)("inlineCode",{parentName:"p"},"%location_x%"),"        | The X coordinate of the location                                                                                                | ",(0,r.kt)("inlineCode",{parentName:"p"},"%loc_x%"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"%x%"),"                                               |\n| ",(0,r.kt)("inlineCode",{parentName:"p"},"%location_y%"),"        | The Y coordinate of the location                                                                                                | ",(0,r.kt)("inlineCode",{parentName:"p"},"%loc_y%"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"%y%"),"                                               |\n| ",(0,r.kt)("inlineCode",{parentName:"p"},"%location_z%"),"        | The Z coordinate of the location                                                                                                | ",(0,r.kt)("inlineCode",{parentName:"p"},"%loc_z%"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"%z%"),"                                               |\n| ",(0,r.kt)("inlineCode",{parentName:"p"},"%location_block_x%"),"  | The X coordinate of the block location                                                                                          | ",(0,r.kt)("inlineCode",{parentName:"p"},"%loc_b_x%"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"%block_x%"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"%bx%"),"                               |\n| ",(0,r.kt)("inlineCode",{parentName:"p"},"%location_block_y%"),"  | The Y coordinate of the block location                                                                                          | ",(0,r.kt)("inlineCode",{parentName:"p"},"%loc_b_y%"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"%block_y%"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"%by%"),"                               |\n| ",(0,r.kt)("inlineCode",{parentName:"p"},"%location_block_z%"),"  | The Z coordinate of the block location                                                                                          | ",(0,r.kt)("inlineCode",{parentName:"p"},"%loc_b_z%"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"%block_z%"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"%bz%"),"                               |\n| ",(0,r.kt)("inlineCode",{parentName:"p"},"%location_world%"),"    | The world name of the location                                                                                                  | ",(0,r.kt)("inlineCode",{parentName:"p"},"%loc_w%"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"%world%"),"                                           |")),(0,r.kt)("h2",{id:"load-weight"},"Load Weight"),(0,r.kt)("p",null,"All configs are loaded alphabetically by default. However, if you have a config that depends on another one, for example an EcoItems item that's crafted with another EcoItems item, you can add ",(0,r.kt)("inlineCode",{parentName:"p"},"load-weight: <weight>"),". All configs have a default load weight of 100, and it's loaded in ascending order, so a config with a load weight of 10 is loaded before a load weight of 20."))}f.isMDXComponent=!0}}]);