"use strict";(self.webpackChunkauxilor_docs=self.webpackChunkauxilor_docs||[]).push([[97005],{3905:function(e,t,r){r.d(t,{Zo:function(){return f},kt:function(){return s}});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=a.createContext({}),u=function(e){var t=a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},f=function(e){var t=u(e.components);return a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,c=e.parentName,f=o(e,["components","mdxType","originalType","parentName"]),m=u(r),s=n,d=m["".concat(c,".").concat(s)]||m[s]||p[s]||l;return r?a.createElement(d,i(i({ref:t},f),{},{components:r})):a.createElement(d,i({ref:t},f))}));function s(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,i=new Array(l);i[0]=m;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:n,i[1]=o;for(var u=2;u<l;u++)i[u]=r[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},64525:function(e,t,r){r.r(t),r.d(t,{assets:function(){return f},contentTitle:function(){return c},default:function(){return s},frontMatter:function(){return o},metadata:function(){return u},toc:function(){return p}});var a=r(87462),n=r(63366),l=(r(67294),r(3905)),i=["components"],o={},c="total_damage_multiplier",u={unversionedId:"effects/all-effects/total_damage_multiplier",id:"effects/all-effects/total_damage_multiplier",title:"total_damage_multiplier",description:"Triggered Effect",source:"@site/docs/effects/all-effects/total_damage_multiplier.md",sourceDirName:"effects/all-effects",slug:"/effects/all-effects/total_damage_multiplier",permalink:"/effects/all-effects/total_damage_multiplier",editUrl:"https://github.com/Auxilor/auxilor.github.io/tree/master/docs/effects/all-effects/total_damage_multiplier.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"teleport_to_ground",permalink:"/effects/all-effects/teleport_to_ground"},next:{title:"traceback",permalink:"/effects/all-effects/traceback"}},f={},p=[{value:"Triggered Effect",id:"triggered-effect",level:4},{value:"Real-Use Example:",id:"real-use-example",level:2}],m={toc:p};function s(e){var t=e.components,r=(0,n.Z)(e,i);return(0,l.kt)("wrapper",(0,a.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"total_damage_multiplier"},(0,l.kt)("inlineCode",{parentName:"h1"},"total_damage_multiplier")),(0,l.kt)("h4",{id:"triggered-effect"},"Triggered Effect"),(0,l.kt)("p",null,"Multiplies all incoming or outgoing damage from any damage trigger"),(0,l.kt)("p",null,"This effect ",(0,l.kt)("strong",{parentName:"p"},"always")," runs at the ",(0,l.kt)("strong",{parentName:"p"},"end")," of the run-order. This allows you to multiply other damage effects, such as damage added by the ",(0,l.kt)("inlineCode",{parentName:"p"},"add_damage")," effect, as well as damage added by other plugins."),(0,l.kt)("p",null,"Warning: This effect can lead to dealing big damage, in most cases you probably only want to use ",(0,l.kt)("a",{parentName:"p",href:"https://plugins.auxilor.io/effects/all-effects/damage_multiplier"},(0,l.kt)("inlineCode",{parentName:"a"},"damage_multiplier"))),(0,l.kt)("h1",{id:"example-config"},"Example Config"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"- id: total_damage_multiplier\n  args:\n    multiplier: 0.5 # The multiplier\n  ...other config (eg triggers, filters, mutators, etc)\n")),(0,l.kt)("h2",{id:"real-use-example"},"Real-Use Example:"),(0,l.kt)("p",null,"In the below example, the math is as follows:"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"((<base_damage> * <damage_multiplier>) + <add_damage>) * <total_damage_multiplier>")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"(( 5 * 1.2 ) + 2 ) * 2")," = 16 damage"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"effects:\n\xa0 - triggers:\n\xa0 \xa0 \xa0 - melee_attack # The base damage is 5 for this example\n\xa0 \xa0 effects:\n\xa0 \xa0 \xa0 - id: damage_multiplier\n\xa0 \xa0 \xa0 \xa0 args:\n\xa0 \xa0 \xa0 \xa0 \xa0 multiplier: 1.2\n\xa0 \xa0 \xa0 - id: add_damage\n\xa0 \xa0 \xa0 \xa0 args:\n\xa0 \xa0 \xa0 \xa0 \xa0 damage: 2\n\xa0 \xa0 \xa0 - id: total_damage_multiplier\n\xa0 \xa0 \xa0 \xa0 args:\n\xa0 \xa0 \xa0 \xa0 \xa0 multiplier: 2\n")))}s.isMDXComponent=!0}}]);