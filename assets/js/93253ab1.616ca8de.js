"use strict";(self.webpackChunkauxilor_docs=self.webpackChunkauxilor_docs||[]).push([[4640],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),f=c(n),m=i,d=f["".concat(s,".").concat(m)]||f[m]||u[m]||o;return n?r.createElement(d,a(a({ref:t},p),{},{components:n})):r.createElement(d,a({ref:t},p))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=f;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var c=2;c<o;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},57452:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return u}});var r=n(87462),i=n(63366),o=(n(67294),n(3905)),a=["components"],l={title:"Item Points",sidebar_position:1},s=void 0,c={unversionedId:"effects/item-points/item_points",id:"effects/item-points/item_points",title:"Item Points",description:"Item Points is an extension to libreforge (not in the base plugin), which adds ways to level up items and store",source:"@site/docs/effects/item-points/item_points.md",sourceDirName:"effects/item-points",slug:"/effects/item-points/item_points",permalink:"/effects/item-points/item_points",editUrl:"https://github.com/Auxilor/auxilor.github.io/tree/master/docs/effects/item-points/item_points.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Item Points",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Custom Placeholders",permalink:"/effects/custom-placeholders"},next:{title:"Item Levels",permalink:"/effects/item-points/item_levels"}},p={},u=[{value:"Installation",id:"installation",level:2},{value:"Placeholders",id:"placeholders",level:2}],f={toc:u};function m(e){var t=e.components,n=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Item Points is an extension to libreforge (not in the base plugin), which adds ways to level up items and store\npoints directly within them rather than in players or the server."),(0,o.kt)("p",null,"Just like regular points, you can create as many as you want, and they can hold any numeric value."),(0,o.kt)("h2",{id:"installation"},"Installation"),(0,o.kt)("p",null,"Item Points will be available soon on Spigot, Polymart, and BuiltByBit."),(0,o.kt)("p",null,"Item Points is installed differently to a regular plugin - instead of being added to ",(0,o.kt)("inlineCode",{parentName:"p"},"/plugins/"),", it's added\nto ",(0,o.kt)("inlineCode",{parentName:"p"},"/plugins/libreforge/extensions/"),". Once it's installed, its config files are automatically placed into\n",(0,o.kt)("inlineCode",{parentName:"p"},"/plugins/libreforge/"),"."),(0,o.kt)("h2",{id:"placeholders"},"Placeholders"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"%libreforge_item_points_<point>%")))}m.isMDXComponent=!0}}]);