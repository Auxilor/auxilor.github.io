"use strict";(self.webpackChunkauxilor_docs=self.webpackChunkauxilor_docs||[]).push([[4630],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return f}});var o=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=o.createContext({}),l=function(e){var n=o.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=l(e.components);return o.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},m=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=l(t),f=r,b=m["".concat(c,".").concat(f)]||m[f]||u[f]||a;return t?o.createElement(b,i(i({ref:n},p),{},{components:t})):o.createElement(b,i({ref:n},p))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,i=new Array(a);i[0]=m;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var l=2;l<a;l++)i[l]=t[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}m.displayName="MDXCreateElement"},66494:function(e,n,t){t.r(n),t.d(n,{assets:function(){return p},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return u}});var o=t(87462),r=t(63366),a=(t(67294),t(3905)),i=["components"],s={title:"Mob Categories",sidebar_position:3},c=void 0,l={unversionedId:"ecomobs/mob-categories",id:"ecomobs/mob-categories",title:"Mob Categories",description:"What are categories?",source:"@site/docs/ecomobs/mob-categories.md",sourceDirName:"ecomobs",slug:"/ecomobs/mob-categories",permalink:"/ecomobs/mob-categories",editUrl:"https://github.com/Auxilor/auxilor.github.io/tree/master/docs/ecomobs/mob-categories.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Mob Categories",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"How to make a custom mob",permalink:"/ecomobs/how-to-make-a-custom-mob"},next:{title:"API",permalink:"/ecomobs/api"}},p={},u=[{value:"What are categories?",id:"what-are-categories",level:2},{value:"How to add categories",id:"how-to-add-categories",level:2},{value:"Example Mob Config",id:"example-mob-config",level:2}],m={toc:u};function f(e){var n=e.components,t=(0,r.Z)(e,i);return(0,a.kt)("wrapper",(0,o.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"what-are-categories"},"What are categories?"),(0,a.kt)("p",null,"In EcoMobs, each mob belongs to a category, which control things like spawning behaviour."),(0,a.kt)("p",null,"For example, you might have a category for common mobs, one for rare mobs, one for nether bosses,\netc."),(0,a.kt)("h2",{id:"how-to-add-categories"},"How to add categories"),(0,a.kt)("p",null,"Categories are each config files placed in the ",(0,a.kt)("inlineCode",{parentName:"p"},"/categories/")," folder, and you can add or remove them as you please. There's an example config called ",(0,a.kt)("inlineCode",{parentName:"p"},"_example.yml")," to help you out!"),(0,a.kt)("h2",{id:"example-mob-config"},"Example Mob Config"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"# The ID of the category is the name of the .yml file,\n# for example bosses.yml has the ID of bosses\n# You can place categories anywhere in this folder,\n# including in subfolders if you want to organize your category configs\n# _example.yml is not loaded.\n\nspawning:\n  # Available methods:\n\n  # replace\n  # Uses the vanilla spawning system to spawn the mob, by replacing\n  # the vanilla mob with the custom mob when it spawns.\n\n  # custom\n  # Uses the EcoMobs spawning system.\n\n  # none\n  # Disables natural spawning\n\n  type: custom\n\n  # Options for replace spawning\n  replace:\n    # The vanilla mobs to replace\n    replace:\n      - zombie\n      - skeleton\n\n\n  # Options for custom spawning\n  custom:\n    # Spawn types (choose from land, water)\n    spawn-types:\n      - land\n\n    # Conditions that the location must match in order for the mob to spawn\n    # Read here: https://plugins.auxilor.io/effects/configuring-a-condition\n    conditions: [ ]\n\n    # The chance for the mob to spawn if a valid spawn point is found (as a percentage)\n    chance: 1.5\n\n\n# If the mob is persistent, then it will not despawn naturally.\npersistent: false\n\n")))}f.isMDXComponent=!0}}]);