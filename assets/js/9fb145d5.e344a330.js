"use strict";(self.webpackChunkauxilor_docs=self.webpackChunkauxilor_docs||[]).push([[10090],{3905:function(e,t,n){n.d(t,{Zo:function(){return f},kt:function(){return d}});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},f=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,f=l(e,["components","mdxType","originalType","parentName"]),p=s(n),d=i,m=p["".concat(c,".").concat(d)]||p[d]||u[d]||o;return n?r.createElement(m,a(a({ref:t},f),{},{components:n})):r.createElement(m,a({ref:t},f))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=p;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var s=2;s<o;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},41026:function(e,t,n){n.r(t),n.d(t,{assets:function(){return f},contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return u}});var r=n(87462),i=n(63366),o=(n(67294),n(3905)),a=["components"],l={title:"How to configure a filter"},c="Using Filters",s={unversionedId:"effects/all-filters/index",id:"effects/all-filters/index",title:"How to configure a filter",description:"Filters are config keys, added under the filters: section of an effect",source:"@site/docs/effects/all-filters/index.md",sourceDirName:"effects/all-filters",slug:"/effects/all-filters/",permalink:"/effects/all-filters/",editUrl:"https://github.com/Auxilor/auxilor.github.io/tree/master/docs/effects/all-filters/index.md",tags:[],version:"current",frontMatter:{title:"How to configure a filter"},sidebar:"tutorialSidebar",previous:{title:"within_radius_of",permalink:"/effects/all-conditions/within_radius_of"},next:{title:"above_health_percent",permalink:"/effects/all-filters/above_health_percent"}},f={},u=[],p={toc:u};function d(e){var t=e.components,n=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"using-filters"},"Using Filters"),(0,o.kt)("p",null,"Filters are config keys, added under the filters: section of an effect"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"[!example]"),(0,o.kt)("pre",{parentName:"blockquote"},(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"effects:\n- id: cancel_event\n  triggers:\n    - mine_block\n  filters:\n    blocks:\n      - budding_amethyst\n")),(0,o.kt)("p",{parentName:"blockquote"},"Filters work by checking the provided data against the rules that you outline, so in this example it will prevent the player from mining budding amethyst.")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"[!example]","\nLike conditions, you can also invert filters like this:"),(0,o.kt)("pre",{parentName:"blockquote"},(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"effects:\n- id: cancel_event\n  triggers:\n    - mine_block\n  filters:\n    not_blocks: # Adding `not_` before the filter ID will invert it\n      - budding_amethyst\n")),(0,o.kt)("p",{parentName:"blockquote"},"This will negate the filter, i.e. only cancel events that ",(0,o.kt)("strong",{parentName:"p"},"aren't")," budding amethyst breaks.")))}d.isMDXComponent=!0}}]);