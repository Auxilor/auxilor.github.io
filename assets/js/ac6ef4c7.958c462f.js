"use strict";(self.webpackChunkauxilor_docs=self.webpackChunkauxilor_docs||[]).push([[58739],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return m}});var i=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,i,o=function(e,n){if(null==e)return{};var t,i,o={},r=Object.keys(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=i.createContext({}),l=function(e){var n=i.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=l(e.components);return i.createElement(s.Provider,{value:n},e.children)},f={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},p=i.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=l(t),m=o,d=p["".concat(s,".").concat(m)]||p[m]||f[m]||r;return t?i.createElement(d,a(a({ref:n},u),{},{components:t})):i.createElement(d,a({ref:n},u))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,a=new Array(r);a[0]=p;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var l=2;l<r;l++)a[l]=t[l];return i.createElement.apply(null,a)}return i.createElement.apply(null,t)}p.displayName="MDXCreateElement"},4940:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return f}});var i=t(87462),o=t(63366),r=(t(67294),t(3905)),a=["components"],c={title:"Configuring a Condition",sidebar_position:3},s="Configuring a Condition",l={unversionedId:"effects/configuring-a-condition",id:"effects/configuring-a-condition",title:"Configuring a Condition",description:"Like effects, mutators, and entity goals, conditions consist of an ID and arguments.",source:"@site/docs/effects/configuring-a-condition.md",sourceDirName:"effects",slug:"/effects/configuring-a-condition",permalink:"/effects/configuring-a-condition",editUrl:"https://github.com/Auxilor/auxilor.github.io/tree/master/docs/effects/configuring-a-condition.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Configuring a Condition",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Configuring an Effect Chain",permalink:"/effects/configuring-a-chain"},next:{title:"add_damage",permalink:"/effects/all-effects/add_damage"}},u={},f=[{value:"Victim Conditions",id:"victim-conditions",level:2}],p={toc:f};function m(e){var n=e.components,t=(0,o.Z)(e,a);return(0,r.kt)("wrapper",(0,i.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"configuring-a-condition"},"Configuring a Condition"),(0,r.kt)("p",null,"Like effects, mutators, and entity goals, conditions consist of an ID and arguments."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"[!example]"),(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'- id: has_permission\n  args:\n    permission: "ecomc.rank.mvp" # The required permission\n    inverse: true # If the player should *not* have the permission\n'))),(0,r.kt)("p",null,"As shown in the above example, all conditions additionally have an inverse argument, like this:"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"[!example]"),(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"- id: on_fire\n  args:\n    inverse: true\n"))),(0,r.kt)("p",null,"This will negate the condition, i.e. only be true when the base condition is false."),(0,r.kt)("p",null,"If this condition is for a plugin for items (EcoEnchants, EcoItems, Reforges, Talismans, and EcoArmor) you can also add lore lines to be shown to the player if they don't meet the condition, like this:"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"[!example]"),(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'- id: has_permission\n  args:\n    permission: "ecomc.rank.mvp"\n    not-met-lines:\n      - "&cYou need &bMVP&c rank to use &7Crystal Finder"\n      - "&cBuy it at &astore.ecomc.net"\n')),(0,r.kt)("h2",{parentName:"blockquote",id:"not-met-effects"},"Not met Effects")),(0,r.kt)("p",null,"If your condition is effect-specific (i.e. in the ",(0,r.kt)("inlineCode",{parentName:"p"},"conditions: []")," section of an effect rather than on the main holder conditions), you can specify not-met-effects."),(0,r.kt)("p",null,"These are effects ran when the condition is not met but a player tries to activate the effect (invoke the trigger)."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"[!example]"),(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'effects:\n  - id: give_money\n    args:\n      amount: 100\n    conditions:\n      - id: has_permission\n        args:\n          permission: "ecomc.rank.mvp"\n        not-met-effects:\n          - id: send_message\n            args:\n              message: "&cYou need &bMVP&c rank to use &7Crystal Finder&c, buy it at &astore.ecomc.net&c!"\n    triggers:\n      - break_block\n'))),(0,r.kt)("p",null,"So here, MVP players would get $100 for breaking a block, whereas non-MVP players would be told to buy the rank to get the perk when they try to break a block. This functions as an alternative to not-met-lines."),(0,r.kt)("h2",{id:"victim-conditions"},"Victim Conditions"),(0,r.kt)("p",null,"You can also check if the victim (player/entity) meets the conditions before running the effects by using the ",(0,r.kt)("inlineCode",{parentName:"p"},"victim_conditions")," filter, ",(0,r.kt)("a",{parentName:"p",href:"https://plugins.auxilor.io/effects/all-filters/victim_conditions"},"here"),". You can combine these with usual conditions to create intricate effects with comprehensive lists of criteria to be met."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"[!example]"),(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"effects:\n  - id: give_money\n    args:\n      amount: 100\n    filters:\n      victim_conditions:\n        - id: in_mainhand\n          args:\n            items:\n              - DIAMOND_SWORD\n    conditions:\n      - id: below_y\n        args:\n          y: 0\n    triggers:\n      - melee_attack\n"))),(0,r.kt)("p",null,"So here, the player will gain $100 when they attack a player/entity wielding a diamond sword in their main-hand, whilst the player is below Y level 0."))}m.isMDXComponent=!0}}]);