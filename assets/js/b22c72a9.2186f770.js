"use strict";(self.webpackChunkauxilor_docs=self.webpackChunkauxilor_docs||[]).push([[545],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=o.createContext({}),c=function(e){var t=o.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=c(e.components);return o.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,i=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=c(n),f=a,d=m["".concat(i,".").concat(f)]||m[f]||p[f]||r;return n?o.createElement(d,s(s({ref:t},u),{},{components:n})):o.createElement(d,s({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,s=new Array(r);s[0]=m;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:a,s[1]=l;for(var c=2;c<r;c++)s[c]=n[c];return o.createElement.apply(null,s)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8182:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return i},default:function(){return f},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return p}});var o=n(7462),a=n(3366),r=(n(7294),n(3905)),s=["components"],l={title:"How to make a custom stat",sidebar_position:6},i=void 0,c={unversionedId:"ecoskills/how-to-make-a-custom-stat",id:"ecoskills/how-to-make-a-custom-stat",title:"How to make a custom stat",description:"Default config",source:"@site/docs/ecoskills/how-to-make-a-custom-stat.md",sourceDirName:"ecoskills",slug:"/ecoskills/how-to-make-a-custom-stat",permalink:"/ecoskills/how-to-make-a-custom-stat",editUrl:"https://github.com/Auxilor/docs/tree/main/packages/create-docusaurus/templates/shared/docs/ecoskills/how-to-make-a-custom-stat.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{title:"How to make a custom stat",sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"How to make a custom effect",permalink:"/ecoskills/how-to-make-a-custom-effect"},next:{title:"How to make a custom skill",permalink:"/ecoskills/how-to-make-a-custom-skill"}},u={},p=[{value:"Default config",id:"default-config",level:2},{value:"How to add custom stats",id:"how-to-add-custom-stats",level:2},{value:"Example Custom Stat Config",id:"example-custom-stat-config",level:3},{value:"Understanding all the sections",id:"understanding-all-the-sections",level:2}],m={toc:p};function f(e){var t=e.components,n=(0,a.Z)(e,s);return(0,r.kt)("wrapper",(0,o.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"default-config"},"Default config"),(0,r.kt)("p",null,"The default configs can be found here:"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/Auxilor/EcoSkills/blob/master/eco-core/core-plugin/src/main/resources/customstats/"},"GitHub")),(0,r.kt)("h2",{id:"how-to-add-custom-stats"},"How to add custom stats"),(0,r.kt)("p",null,"Custom stats are each config files placed in the ",(0,r.kt)("inlineCode",{parentName:"p"},"/customstats/")," folder, and you can add or remove them as you please. There's an example config called ",(0,r.kt)("inlineCode",{parentName:"p"},"_example.yml")," to help you out!"),(0,r.kt)("h3",{id:"example-custom-stat-config"},"Example Custom Stat Config"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'name: "&#f5aa42\ud83c\udf56 Saturation" # The name of the stat, shown to players\nplaceholder: "%level% / 3" # The placeholder to be shown in the description, you can use expressions - eg %level% * 2\ndescription: "&8Lose &a%placeholder%%&8 less hunger" # The description to be shown in lore and messages\n\n# Options for the stat in the GUI\nstats-gui:\n  enabled: false # If the stat should show up in the GUI\n  position:\n    row: 5\n    column: 5\n  item:\n    item: player_head texture:eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvZDMzZGRiOTJjYjZiM2E3OTI4MGI4YmRjZWQ4OTc2YWVhYjEzYTRiZmZlYWVmMmQ0NmQ4MjhiZDkxZGVlMGYzZSJ9fX0=\n    name: "%stat%"\n    lore:\n      - "&fLevel: &a%level%"\n      - "&8&o%description%"\n\n# The effects of the stat (i.e. the functionality)\n# See here: https://plugins.auxilor.io/effects/configuring-an-effect\n# Use %level% as a placeholder for the stat level\neffects:\n  - id: hunger_multiplier\n    args:\n      multiplier: "1 - (%level% / 300)"\n\n# The conditions required for the effects to activate,\n# you can use %level% as a placeholder here too\nconditions: [ ]\n')),(0,r.kt)("h2",{id:"understanding-all-the-sections"},"Understanding all the sections"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"id"),": The id of the effect (lowercase only!)"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"placeholder"),": The formula to calculate the placeholder shown in the description; you can use mathematical operations, e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"%level% / 50")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"description"),": The description shown in lore and mesasges, you can use %placeholder% to have the value"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"stats-gui"),": The options to show the stat in the stats GUI, ",(0,r.kt)("inlineCode",{parentName:"p"},"enabled")," defines whether or not it is in the gui, and the rest should be self-explanatory"),(0,r.kt)("p",null,"Each stat has its own effects/conditions, and you can configure them the same way as other plugins of mine: read the guide on how to understand the effect system here:"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://plugins.auxilor.io/effects/configuring-an-effect"},"Configuring an Effect")))}f.isMDXComponent=!0}}]);