"use strict";(self.webpackChunkauxilor_docs=self.webpackChunkauxilor_docs||[]).push([[72952],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return f}});var o=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=o.createContext({}),c=function(e){var n=o.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=c(e.components);return o.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},d=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=c(t),f=r,m=d["".concat(s,".").concat(f)]||d[f]||p[f]||a;return t?o.createElement(m,l(l({ref:n},u),{},{components:t})):o.createElement(m,l({ref:n},u))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,l=new Array(a);l[0]=d;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var c=2;c<a;c++)l[c]=t[c];return o.createElement.apply(null,l)}return o.createElement.apply(null,t)}d.displayName="MDXCreateElement"},11099:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return s},default:function(){return f},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return p}});var o=t(87462),r=t(63366),a=(t(67294),t(3905)),l=["components"],i={title:"How to make a Job",sidebar_position:1},s=void 0,c={unversionedId:"ecojobs/how-to-make-a-custom-job",id:"ecojobs/how-to-make-a-custom-job",title:"How to make a Job",description:"Default configs",source:"@site/docs/ecojobs/how-to-make-a-custom-job.md",sourceDirName:"ecojobs",slug:"/ecojobs/how-to-make-a-custom-job",permalink:"/ecojobs/how-to-make-a-custom-job",editUrl:"https://github.com/Auxilor/auxilor.github.io/tree/master/docs/ecojobs/how-to-make-a-custom-job.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"How to make a Job",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"EcoJobs",permalink:"/ecojobs/"},next:{title:"give_job_xp",permalink:"/ecojobs/ecojobs-effects/effects/give_job_xp"}},u={},p=[{value:"Default configs",id:"default-configs",level:2},{value:"How to add jobs",id:"how-to-add-jobs",level:2},{value:"Example Job Config",id:"example-job-config",level:2},{value:"Understanding all the sections",id:"understanding-all-the-sections",level:2},{value:"Effects &amp; Conditions",id:"effects--conditions",level:3},{value:"Internal Placeholders",id:"internal-placeholders",level:2}],d={toc:p};function f(e){var n=e.components,t=(0,r.Z)(e,l);return(0,a.kt)("wrapper",(0,o.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"default-configs"},"Default configs"),(0,a.kt)("p",null,"The default configs can be found ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Auxilor/EcoJobs/tree/master/eco-core/core-plugin/src/main/resources/jobs"},"here"),".\nYou can find additional user-created configs on ",(0,a.kt)("a",{parentName:"p",href:"https://lrcdb.auxilor.io/"},"lrcdb"),"."),(0,a.kt)("h2",{id:"how-to-add-jobs"},"How to add jobs"),(0,a.kt)("p",null,"Each job is its own config file, placed in the ",(0,a.kt)("inlineCode",{parentName:"p"},"/jobs/")," folder, and you can add or remove them as you please. There's an example config called ",(0,a.kt)("inlineCode",{parentName:"p"},"_example.yml")," to help you out!"),(0,a.kt)("p",null,"The ID of the Job is the file name. This is what you use in commands, effects and placeholders.\nID's must be lowercase letters, numbers, and underscores only."),(0,a.kt)("h2",{id:"example-job-config"},"Example Job Config"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'name: "&6Miner" # The display name of the job\ndescription: "&8&oLevel up by mining blocks" # The description of the job\nunlocked-by-default: true # If the job should be unlocked by default\nreset-on-quit: false # If job progress should be reset when quitting\n\n# The price to join this job (set to 0 to disable)\n# Read here for more: https://plugins.auxilor.io/all-plugins/prices\njoin-price:\n  value: 0\n  type: coins\n  display: "&a$%value%"\n\n# Lore shown when clicking on the job icon to join it\n# Reference with %join_lore%\njoin-lore: []\n\n# A list of effects to run when the player joins the job.\n# Read https://plugins.auxilor.io/effects/configuring-an-effect\njoin-effects:\n  - id: broadcast\n    args:\n      message: "&8\xbb &a%player% &8joined the &6Miner &8job!"\n\n# The price to leave this job (set to 0 to disable)\n# Read here for more: https://plugins.auxilor.io/all-plugins/prices\nleave-price:\n  value: 20000\n  type: coins\n  display: "&a$%value%"\n  \n# A list of effects to run when the player leaves the job.\n# Read https://plugins.auxilor.io/effects/configuring-an-effect\nleave-effects:\n  - id: send_message\n    args:\n      message: "&8\xbb &8You left the &6Miner &8job!"\n\n# Lore shown on the confirm leave button\n# Reference with %leave_lore%\nleave-lore:\n  - " &8\xbb This will cost %leave_price%"\n\n# There are two ways to specify level XP requirements:  \n# 1. A formula to calculate for infinite levels  \n# 2. A list of XP requirements for each level  \n  \n# Formula  \n# xp-formula: (2 ^ %level%) * 25  \n# max-level: 100 # (Optional) The max level, if not specified, there is no max level  \n  \n# List  \nxp-requirements:  \n- 50  \n- 125  \n- 200  \n- 300  \n- 500  \n- 750  \n- 1000  \n- 1500  \n- 2000  \n- 3500  \n- 5000  \n- 7500  \n- 10000\n\n# An XP gain method takes a trigger, a multiplier, conditions, and filters.\n# The \'multiplier\' takes the value produced by the trigger and multiplies it\n# Alternatively, you can use \'value\' to count a specific number and not a multiplier\nxp-gain-methods:\n  - trigger: mine_block\n    multiplier: 0.5 # You can also use "value" here (see above comment)\n    conditions: [ ]\n    filters:\n      items:\n        - "*wooden_pickaxe"\n        - "*stone_pickaxe"\n        - "*iron_pickaxe"\n        - "*golden_pickaxe"\n        - "*diamond_pickaxe"\n        - "*netherite_pickaxe"\n\n# Custom placeholders to be used in descriptions,\n# Don\'t add % to the IDs, this is done automatically\n# The value takes a %level% placeholder and is a mathematical expression\nlevel-placeholders:\n  - id: "money"\n    value: "%level% * 0.4"\n  - id: "blocks"\n    value: "ceil(10 - %level% / 10)"\n\n# The text shown with the %effects% placeholder\n# The number dictates the minimum level for this text to show for\n# Adding new levels will override this text on those levels or above\neffects-description:\n  1:\n    - "&8\xbb &8Earn &a$%money%&8 for each &a%blocks%&8 blocks mined"\n\n# Same as above, but for %rewards%\nrewards-description:\n  1:\n    - "&8\xbb &8Earn &a$%money%&8 for each &a%blocks%&8 blocks mined"\n\n# Same as above, but for %level_up_messages%\nlevel-up-messages:\n  1:\n    - "&8\xbb &8Earn &a$%money%&8 for each &a%blocks%&8 blocks mined"\n\n# Effects to run when the job levels up  \n# %level% is the level the job leveled up to.  \n# If you want to restrict this to certain levels, you can use  \n# require: %level% = 20, or require: %level% < 50, etc.  \n# If you want a reward to run every x levels, you can use  \n# every: 1, or every: 12, etc  \nlevel-up-effects: \xa0\n\xa0 - id: give_item \xa0\n\xa0 \xa0 args: \xa0\n\xa0 \xa0 \xa0 items: \xa0\n\xa0 \xa0 \xa0 \xa0 - diamond \xa0\n\xa0 \xa0 \xa0 every: 5 # Gives the reward every 5 levels \xa0\n\xa0 \xa0 \xa0 require: "%level% = 5" # Requires level 5 before receiving rewards\n\n# The effects for the job, has %level% as a placeholder\neffects:\n  - id: give_money\n    args:\n      every: "ceil(10 - %level% / 10)"\n      amount: "0.4 * %level%"\n    filters:\n      items:\n        - "*wooden_pickaxe"\n        - "*stone_pickaxe"\n        - "*iron_pickaxe"\n        - "*golden_pickaxe"\n        - "*diamond_pickaxe"\n        - "*netherite_pickaxe"\n    triggers:\n      - mine_block\n\n# The conditions for the job, also has %level% as a placeholder\nconditions: [ ]\n\n# The icon in GUIs\nicon: player_head texture:"eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvODU3MDVjZjg2NGRmMmMxODJlMzJjNDg2YjcxNDdjYmY3ODJhMGFhM2RmOGE2ZDYxNDUzOTM5MGJmODRmYjE1ZCJ9fX0="\n')),(0,a.kt)("h2",{id:"understanding-all-the-sections"},"Understanding all the sections"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"name:")," The name of the job in-game."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"description:")," The description of the job."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"join/leave-price:")," The cost of joining or leaving the job."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"join/leave-lore:")," The lore shown to the player when they join or leave a job."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"level-xp-requirements:")," A list of XP requirements for each level."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"xp-requirements:\n  - 50\n  - 125\n  - 200\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"xp-formula:")," A formula to calculate XP requirements for each level."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"max-level:")," The maximum level for the job (Optional)."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"xp-gain-methods:")," The trigger, multiplier/value, conditions and filters that will award job XP."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"level-placeholders:")," Custom placeholders to be used in descriptions."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"effects-description:")," Job specific effect descriptions."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"rewards-description:")," Job specific reward descriptions."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"level-up-messages:")," Job specific level up messages."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"level-commands:")," Commands to be executed when levelling the job."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"icon:")," The item to show in /jobs, read here for more: ",(0,a.kt)("a",{parentName:"p",href:"https://plugins.auxilor.io/all-plugins/the-item-lookup-system"},"Item Lookup System"),"."),(0,a.kt)("h3",{id:"effects--conditions"},"Effects & Conditions"),(0,a.kt)("p",null,"You can configure effects, conditions, filters, and mutators in this section to run when the job is levelled up."),(0,a.kt)("p",null,"Check out ",(0,a.kt)("a",{parentName:"p",href:"https://plugins.auxilor.io/effects/configuring-an-effect"},"Configuring an Effect")," to understand how to configure this section correctly."),(0,a.kt)("p",null,"For more advanced users or setups, you can configure chains in this section to string together different effects under one trigger. Check out ",(0,a.kt)("a",{parentName:"p",href:"https://plugins.auxilor.io/effects/configuring-a-chain"},"Configuring an Effect Chain")," for more info."),(0,a.kt)("h2",{id:"internal-placeholders"},"Internal Placeholders"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Placeholder"),(0,a.kt)("th",{parentName:"tr",align:null},"Value"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"%level%")),(0,a.kt)("td",{parentName:"tr",align:null},"The player's job level. Useful for creating scaling effects")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"%level_numeral%")),(0,a.kt)("td",{parentName:"tr",align:null},"The player's job level shown in Roman Numerals")))))}f.isMDXComponent=!0}}]);